name: Android CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ---------------------------------------------------------------
  # üß™ Job 1: Run Unit Tests (JVM tests under src/test/java)
  # ---------------------------------------------------------------
  unit-tests:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      # ‚öôÔ∏è Make gradlew executable
      - name: Grant execute permission to gradlew
        run: chmod +x NewsRoom/gradlew

      - name: Gradle cache
        uses: gradle/gradle-build-action@v3
        with:
          cache-read-only: false

      - name: Run unit tests
        working-directory: NewsRoom
        run: |
          ./gradlew clean :app:testDebugUnitTest :app:testReleaseUnitTest --stacktrace

      - name: Upload unit test HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: NewsRoom/app/build/reports/tests/testDebugUnitTest/

      - name: Upload unit test XML results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-xml
          path: NewsRoom/app/build/test-results/testDebugUnitTest/

  # ---------------------------------------------------------------
  # üì± Job 2: Run Android Instrumented (UI) Tests (src/androidTest/java)
  # ---------------------------------------------------------------
  # android-ui-tests:
  #   name: üì± Android Instrumented Tests
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 60
  #   needs: unit-tests
  #
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4
  #
  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 17
  #         cache: gradle
  #
  #     - name: Grant execute permission to gradlew
  #       run: chmod +x NewsRoom/gradlew
  #
  #     - name: Set up Android SDK
  #       uses: android-actions/setup-android@v3
  #
  #     - name: Set Android environment variables
  #       run: |
  #         echo "ANDROID_AVD_HOME=$HOME/.android/avd" >> $GITHUB_ENV
  #         echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
  #         echo "PATH=$ANDROID_HOME/emulator:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_PATH
  #
  #     - name: Create local.properties
  #       working-directory: NewsRoom
  #       run: |
  #         echo "sdk.dir=/github/home/Android/Sdk" >> local.properties
  #         echo "news.api.key=${{ secrets.NEWS_API_KEY }}" >> local.properties
  #         echo "RELEASE_STORE_FILE=keystore/release-keystore.jks" >> local.properties
  #         echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> local.properties
  #         echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> local.properties
  #         echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> local.properties
  #
  #     - name: Install system image & create AVD
  #       run: |
  #         sudo apt-get install openjdk-8-jdk -y
  #         export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
  #         export PATH=$JAVA_HOME/bin:$PATH
  #         sdkmanager --list | grep "system-images;android-34;google_apis;x86_64" || sdkmanager "system-images;android-34;google_apis;x86_64"
  #         AVD_NAME="test"
  #         mkdir -p $HOME/.android/avd
  #         if [ ! -f "$HOME/.android/avd/${AVD_NAME}.avd/config.ini" ]; then
  #           echo "Creating AVD $AVD_NAME..."
  #           echo "no" | avdmanager create avd -n $AVD_NAME -k "system-images;android-34;google_apis;x86_64" --device "pixel" --force
  #         else
  #           echo "AVD $AVD_NAME already exists, reusing."
  #         fi
  #
  #     - name: Switch back to JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 17
  #         cache: gradle
  #
  #     - name: Start emulator and wait for boot
  #       run: |
  #         nohup emulator -avd test -no-window -noaudio -gpu swiftshader_indirect -no-boot-anim &
  #         adb wait-for-device
  #         retries=0
  #         boot_completed=""
  #         while [ -z "$boot_completed" ] && [ $retries -lt 30 ]; do
  #           sleep 20
  #           boot_completed=$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
  #           echo "Boot check $retries/30 -> $boot_completed"
  #           retries=$((retries + 1))
  #         done
  #         if [ -z "$boot_completed" ]; then
  #           echo "‚ùå Emulator failed to start in time."
  #           exit 1
  #         fi
  #         adb shell input keyevent 82
  #
  #     - name: Run instrumented (androidTest) tests
  #       working-directory: NewsRoom
  #       run: ./gradlew :app:connectedDebugAndroidTest :app:connectedReleaseAndroidTest --stacktrace
  #
  #     - name: Upload androidTest HTML report
  #       if: always()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-ui-test-report
  #         path: NewsRoom/app/build/reports/androidTests/connected/
  #
  #     - name: Upload androidTest XML results
  #       if: always()
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: android-ui-test-xml
  #         path: NewsRoom/app/build/outputs/androidTest-results/connected/
